scalar Void

type Query {
  ping: String!

  # Who knows
  whoKnowsArtist(artist: ArtistInput!, settings: WhoKnowsSettings): WhoKnowsArtistResponse
  whoKnowsAlbum(album: AlbumInput!, settings: WhoKnowsSettings): WhoKnowsAlbumResponse
  whoKnowsTrack(track: TrackInput!, settings: WhoKnowsSettings): WhoKnowsTrackResponse

  # Guild members
  guildMembers(guildID: String!): [GuildMember!]!
}

type Mutation {
  login(username: String!, discordID: String!, userType: UserType!): User
  logout(discordID: String!): Void

  # Guild member syncing
  addUserToGuild(discordID: String!, guildID: String!): GuildMember
  removeUserFromGuild(discordID: String!, guildID: String!): Void
  syncGuild(guildID: String!, discordIDs: [String!]!): Void

  # .fm indexing
  fullIndex(user: UserInput!): TaskStartResponse
  update(user: UserInput!): TaskStartResponse
}

##############
# Base Types #
##############

enum UserType {
  Wavy
  Lastfm
}

type User {
  id: Int!
  username: String!
  discordID: String!

  userType: UserType
}

type GuildMember {
  userID: Int!
  guildID: String!

  user: User
}

type Artist {
  id: Int!
  name: String!
}

type Album {
  id: Int!
  name: String!
  artist: Artist!

  tracks: [Track!]
}

type Track {
  id: Int!
  name: String!
  artist: Artist!
  album: Album
}

type AmbiguousTrack {
  name: String!
  artist: String!

  albums: [Album!]
}

##################
# Response Types #
##################

type TaskStartResponse {
  success: Boolean!
  token: String!
}

type WhoKnowsRow {
  user: User!
  playcount: Int!
}

type WhoKnowsArtistResponse {
  rows: [WhoKnowsRow!]!
  artist: Artist!
}

type WhoKnowsAlbumResponse {
  rows: [WhoKnowsRow!]!
  album: Album!
}

type WhoKnowsTrackResponse {
  rows: [WhoKnowsRow!]!
  track: AmbiguousTrack!
}

###############
# Input Types #
###############

input UserInput {
  discordID: String
  lastFMUsername: String
  wavyUsername: String
}

input ArtistInput {
  name: String
}

input AlbumInput {
  artist: ArtistInput
  name: String
}

input TrackInput {
  artist: ArtistInput
  album: AlbumInput
  name: String
}

input WhoKnowsSettings {
  guildID: String
  limit: Int
}
